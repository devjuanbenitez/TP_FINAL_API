/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 12251.0, "series": [{"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 6.0], [45.0, 6.0], [45.1, 6.0], [45.2, 6.0], [45.3, 6.0], [45.4, 6.0], [45.5, 6.0], [45.6, 6.0], [45.7, 6.0], [45.8, 6.0], [45.9, 6.0], [46.0, 6.0], [46.1, 6.0], [46.2, 6.0], [46.3, 6.0], [46.4, 6.0], [46.5, 6.0], [46.6, 6.0], [46.7, 6.0], [46.8, 6.0], [46.9, 6.0], [47.0, 6.0], [47.1, 6.0], [47.2, 6.0], [47.3, 6.0], [47.4, 6.0], [47.5, 6.0], [47.6, 6.0], [47.7, 6.0], [47.8, 6.0], [47.9, 6.0], [48.0, 6.0], [48.1, 6.0], [48.2, 6.0], [48.3, 6.0], [48.4, 6.0], [48.5, 6.0], [48.6, 6.0], [48.7, 6.0], [48.8, 6.0], [48.9, 6.0], [49.0, 6.0], [49.1, 6.0], [49.2, 6.0], [49.3, 6.0], [49.4, 6.0], [49.5, 6.0], [49.6, 6.0], [49.7, 6.0], [49.8, 6.0], [49.9, 6.0], [50.0, 6.0], [50.1, 6.0], [50.2, 6.0], [50.3, 6.0], [50.4, 6.0], [50.5, 6.0], [50.6, 6.0], [50.7, 6.0], [50.8, 6.0], [50.9, 6.0], [51.0, 6.0], [51.1, 6.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 7.0], [52.8, 7.0], [52.9, 7.0], [53.0, 7.0], [53.1, 7.0], [53.2, 7.0], [53.3, 7.0], [53.4, 7.0], [53.5, 7.0], [53.6, 7.0], [53.7, 7.0], [53.8, 7.0], [53.9, 7.0], [54.0, 7.0], [54.1, 7.0], [54.2, 7.0], [54.3, 7.0], [54.4, 7.0], [54.5, 7.0], [54.6, 7.0], [54.7, 7.0], [54.8, 7.0], [54.9, 7.0], [55.0, 7.0], [55.1, 7.0], [55.2, 7.0], [55.3, 7.0], [55.4, 7.0], [55.5, 7.0], [55.6, 7.0], [55.7, 7.0], [55.8, 7.0], [55.9, 7.0], [56.0, 7.0], [56.1, 7.0], [56.2, 7.0], [56.3, 7.0], [56.4, 7.0], [56.5, 7.0], [56.6, 7.0], [56.7, 7.0], [56.8, 7.0], [56.9, 7.0], [57.0, 7.0], [57.1, 7.0], [57.2, 7.0], [57.3, 7.0], [57.4, 7.0], [57.5, 7.0], [57.6, 7.0], [57.7, 7.0], [57.8, 7.0], [57.9, 7.0], [58.0, 7.0], [58.1, 7.0], [58.2, 7.0], [58.3, 7.0], [58.4, 7.0], [58.5, 7.0], [58.6, 7.0], [58.7, 7.0], [58.8, 7.0], [58.9, 7.0], [59.0, 7.0], [59.1, 7.0], [59.2, 7.0], [59.3, 7.0], [59.4, 7.0], [59.5, 7.0], [59.6, 7.0], [59.7, 7.0], [59.8, 7.0], [59.9, 7.0], [60.0, 7.0], [60.1, 7.0], [60.2, 7.0], [60.3, 7.0], [60.4, 7.0], [60.5, 7.0], [60.6, 7.0], [60.7, 7.0], [60.8, 8.0], [60.9, 8.0], [61.0, 8.0], [61.1, 8.0], [61.2, 8.0], [61.3, 8.0], [61.4, 8.0], [61.5, 8.0], [61.6, 8.0], [61.7, 8.0], [61.8, 8.0], [61.9, 8.0], [62.0, 8.0], [62.1, 8.0], [62.2, 8.0], [62.3, 8.0], [62.4, 8.0], [62.5, 8.0], [62.6, 8.0], [62.7, 8.0], [62.8, 8.0], [62.9, 8.0], [63.0, 8.0], [63.1, 8.0], [63.2, 8.0], [63.3, 8.0], [63.4, 8.0], [63.5, 8.0], [63.6, 8.0], [63.7, 8.0], [63.8, 8.0], [63.9, 8.0], [64.0, 8.0], [64.1, 8.0], [64.2, 8.0], [64.3, 8.0], [64.4, 8.0], [64.5, 8.0], [64.6, 8.0], [64.7, 8.0], [64.8, 8.0], [64.9, 8.0], [65.0, 8.0], [65.1, 8.0], [65.2, 8.0], [65.3, 8.0], [65.4, 8.0], [65.5, 8.0], [65.6, 8.0], [65.7, 8.0], [65.8, 8.0], [65.9, 8.0], [66.0, 8.0], [66.1, 8.0], [66.2, 8.0], [66.3, 9.0], [66.4, 9.0], [66.5, 9.0], [66.6, 9.0], [66.7, 9.0], [66.8, 9.0], [66.9, 9.0], [67.0, 9.0], [67.1, 9.0], [67.2, 9.0], [67.3, 9.0], [67.4, 9.0], [67.5, 9.0], [67.6, 9.0], [67.7, 9.0], [67.8, 9.0], [67.9, 9.0], [68.0, 9.0], [68.1, 9.0], [68.2, 9.0], [68.3, 9.0], [68.4, 9.0], [68.5, 9.0], [68.6, 9.0], [68.7, 9.0], [68.8, 10.0], [68.9, 10.0], [69.0, 10.0], [69.1, 10.0], [69.2, 10.0], [69.3, 10.0], [69.4, 10.0], [69.5, 10.0], [69.6, 10.0], [69.7, 10.0], [69.8, 10.0], [69.9, 10.0], [70.0, 10.0], [70.1, 10.0], [70.2, 10.0], [70.3, 10.0], [70.4, 10.0], [70.5, 10.0], [70.6, 10.0], [70.7, 10.0], [70.8, 10.0], [70.9, 10.0], [71.0, 10.0], [71.1, 11.0], [71.2, 11.0], [71.3, 11.0], [71.4, 11.0], [71.5, 11.0], [71.6, 11.0], [71.7, 11.0], [71.8, 11.0], [71.9, 11.0], [72.0, 11.0], [72.1, 11.0], [72.2, 11.0], [72.3, 11.0], [72.4, 11.0], [72.5, 11.0], [72.6, 11.0], [72.7, 12.0], [72.8, 12.0], [72.9, 12.0], [73.0, 12.0], [73.1, 12.0], [73.2, 12.0], [73.3, 12.0], [73.4, 12.0], [73.5, 12.0], [73.6, 12.0], [73.7, 12.0], [73.8, 12.0], [73.9, 13.0], [74.0, 13.0], [74.1, 13.0], [74.2, 13.0], [74.3, 13.0], [74.4, 13.0], [74.5, 13.0], [74.6, 13.0], [74.7, 13.0], [74.8, 13.0], [74.9, 13.0], [75.0, 14.0], [75.1, 14.0], [75.2, 14.0], [75.3, 14.0], [75.4, 14.0], [75.5, 14.0], [75.6, 14.0], [75.7, 14.0], [75.8, 14.0], [75.9, 14.0], [76.0, 14.0], [76.1, 15.0], [76.2, 15.0], [76.3, 15.0], [76.4, 15.0], [76.5, 15.0], [76.6, 15.0], [76.7, 15.0], [76.8, 15.0], [76.9, 16.0], [77.0, 16.0], [77.1, 16.0], [77.2, 16.0], [77.3, 16.0], [77.4, 16.0], [77.5, 16.0], [77.6, 17.0], [77.7, 17.0], [77.8, 17.0], [77.9, 17.0], [78.0, 17.0], [78.1, 17.0], [78.2, 17.0], [78.3, 17.0], [78.4, 18.0], [78.5, 18.0], [78.6, 18.0], [78.7, 18.0], [78.8, 18.0], [78.9, 18.0], [79.0, 18.0], [79.1, 18.0], [79.2, 18.0], [79.3, 18.0], [79.4, 19.0], [79.5, 19.0], [79.6, 19.0], [79.7, 19.0], [79.8, 19.0], [79.9, 19.0], [80.0, 19.0], [80.1, 19.0], [80.2, 19.0], [80.3, 20.0], [80.4, 20.0], [80.5, 20.0], [80.6, 20.0], [80.7, 20.0], [80.8, 20.0], [80.9, 20.0], [81.0, 20.0], [81.1, 20.0], [81.2, 21.0], [81.3, 21.0], [81.4, 21.0], [81.5, 21.0], [81.6, 21.0], [81.7, 22.0], [81.8, 22.0], [81.9, 22.0], [82.0, 23.0], [82.1, 23.0], [82.2, 24.0], [82.3, 24.0], [82.4, 24.0], [82.5, 25.0], [82.6, 25.0], [82.7, 26.0], [82.8, 27.0], [82.9, 29.0], [83.0, 29.0], [83.1, 34.0], [83.2, 42.0], [83.3, 50.0], [83.4, 192.0], [83.5, 209.0], [83.6, 211.0], [83.7, 212.0], [83.8, 214.0], [83.9, 215.0], [84.0, 215.0], [84.1, 216.0], [84.2, 218.0], [84.3, 218.0], [84.4, 219.0], [84.5, 220.0], [84.6, 221.0], [84.7, 221.0], [84.8, 222.0], [84.9, 223.0], [85.0, 224.0], [85.1, 224.0], [85.2, 225.0], [85.3, 225.0], [85.4, 226.0], [85.5, 226.0], [85.6, 227.0], [85.7, 227.0], [85.8, 228.0], [85.9, 228.0], [86.0, 229.0], [86.1, 229.0], [86.2, 230.0], [86.3, 232.0], [86.4, 232.0], [86.5, 233.0], [86.6, 233.0], [86.7, 234.0], [86.8, 234.0], [86.9, 235.0], [87.0, 236.0], [87.1, 237.0], [87.2, 238.0], [87.3, 238.0], [87.4, 239.0], [87.5, 239.0], [87.6, 240.0], [87.7, 241.0], [87.8, 241.0], [87.9, 242.0], [88.0, 242.0], [88.1, 243.0], [88.2, 244.0], [88.3, 244.0], [88.4, 245.0], [88.5, 246.0], [88.6, 246.0], [88.7, 247.0], [88.8, 248.0], [88.9, 248.0], [89.0, 250.0], [89.1, 251.0], [89.2, 251.0], [89.3, 253.0], [89.4, 254.0], [89.5, 255.0], [89.6, 256.0], [89.7, 257.0], [89.8, 258.0], [89.9, 259.0], [90.0, 260.0], [90.1, 262.0], [90.2, 264.0], [90.3, 266.0], [90.4, 268.0], [90.5, 270.0], [90.6, 272.0], [90.7, 275.0], [90.8, 277.0], [90.9, 283.0], [91.0, 288.0], [91.1, 291.0], [91.2, 301.0], [91.3, 313.0], [91.4, 321.0], [91.5, 338.0], [91.6, 358.0], [91.7, 392.0], [91.8, 479.0], [91.9, 542.0], [92.0, 758.0], [92.1, 942.0], [92.2, 966.0], [92.3, 1034.0], [92.4, 1072.0], [92.5, 1120.0], [92.6, 1144.0], [92.7, 1200.0], [92.8, 1230.0], [92.9, 1274.0], [93.0, 1303.0], [93.1, 1353.0], [93.2, 1392.0], [93.3, 1434.0], [93.4, 1463.0], [93.5, 1519.0], [93.6, 1580.0], [93.7, 1666.0], [93.8, 1720.0], [93.9, 1765.0], [94.0, 1774.0], [94.1, 1793.0], [94.2, 1816.0], [94.3, 1827.0], [94.4, 1839.0], [94.5, 1845.0], [94.6, 1854.0], [94.7, 1865.0], [94.8, 1872.0], [94.9, 1874.0], [95.0, 1874.0], [95.1, 1876.0], [95.2, 1880.0], [95.3, 1884.0], [95.4, 1888.0], [95.5, 1894.0], [95.6, 1897.0], [95.7, 1902.0], [95.8, 1904.0], [95.9, 1907.0], [96.0, 1909.0], [96.1, 1910.0], [96.2, 1912.0], [96.3, 1917.0], [96.4, 1919.0], [96.5, 1921.0], [96.6, 1923.0], [96.7, 1924.0], [96.8, 1924.0], [96.9, 1926.0], [97.0, 1927.0], [97.1, 1930.0], [97.2, 1933.0], [97.3, 1934.0], [97.4, 1936.0], [97.5, 1938.0], [97.6, 1942.0], [97.7, 1948.0], [97.8, 1953.0], [97.9, 1980.0], [98.0, 1990.0], [98.1, 2018.0], [98.2, 2044.0], [98.3, 2050.0], [98.4, 2062.0], [98.5, 2072.0], [98.6, 2099.0], [98.7, 2135.0], [98.8, 2148.0], [98.9, 2154.0], [99.0, 2162.0], [99.1, 2167.0], [99.2, 2178.0], [99.3, 2182.0], [99.4, 2187.0], [99.5, 2199.0], [99.6, 2212.0], [99.7, 2232.0], [99.8, 2278.0], [99.9, 2297.0]], "isOverall": false, "label": "JAVA", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 6.0], [48.5, 6.0], [48.6, 6.0], [48.7, 6.0], [48.8, 6.0], [48.9, 6.0], [49.0, 6.0], [49.1, 6.0], [49.2, 6.0], [49.3, 6.0], [49.4, 6.0], [49.5, 6.0], [49.6, 6.0], [49.7, 6.0], [49.8, 6.0], [49.9, 6.0], [50.0, 6.0], [50.1, 6.0], [50.2, 6.0], [50.3, 6.0], [50.4, 6.0], [50.5, 6.0], [50.6, 6.0], [50.7, 6.0], [50.8, 6.0], [50.9, 6.0], [51.0, 6.0], [51.1, 6.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 7.0], [59.3, 7.0], [59.4, 7.0], [59.5, 7.0], [59.6, 7.0], [59.7, 7.0], [59.8, 7.0], [59.9, 7.0], [60.0, 7.0], [60.1, 7.0], [60.2, 7.0], [60.3, 7.0], [60.4, 7.0], [60.5, 7.0], [60.6, 7.0], [60.7, 7.0], [60.8, 7.0], [60.9, 7.0], [61.0, 7.0], [61.1, 7.0], [61.2, 7.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 7.0], [61.8, 7.0], [61.9, 7.0], [62.0, 7.0], [62.1, 7.0], [62.2, 7.0], [62.3, 7.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 7.0], [63.5, 7.0], [63.6, 7.0], [63.7, 7.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 8.0], [67.2, 8.0], [67.3, 8.0], [67.4, 8.0], [67.5, 8.0], [67.6, 8.0], [67.7, 8.0], [67.8, 8.0], [67.9, 8.0], [68.0, 8.0], [68.1, 8.0], [68.2, 8.0], [68.3, 8.0], [68.4, 8.0], [68.5, 8.0], [68.6, 8.0], [68.7, 8.0], [68.8, 8.0], [68.9, 8.0], [69.0, 8.0], [69.1, 8.0], [69.2, 8.0], [69.3, 8.0], [69.4, 8.0], [69.5, 8.0], [69.6, 8.0], [69.7, 8.0], [69.8, 8.0], [69.9, 8.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 8.0], [71.0, 8.0], [71.1, 8.0], [71.2, 8.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 9.0], [71.9, 9.0], [72.0, 9.0], [72.1, 9.0], [72.2, 9.0], [72.3, 9.0], [72.4, 9.0], [72.5, 9.0], [72.6, 9.0], [72.7, 9.0], [72.8, 9.0], [72.9, 9.0], [73.0, 9.0], [73.1, 9.0], [73.2, 9.0], [73.3, 9.0], [73.4, 9.0], [73.5, 9.0], [73.6, 9.0], [73.7, 9.0], [73.8, 9.0], [73.9, 9.0], [74.0, 9.0], [74.1, 9.0], [74.2, 9.0], [74.3, 9.0], [74.4, 9.0], [74.5, 9.0], [74.6, 10.0], [74.7, 10.0], [74.8, 10.0], [74.9, 10.0], [75.0, 10.0], [75.1, 10.0], [75.2, 10.0], [75.3, 10.0], [75.4, 10.0], [75.5, 10.0], [75.6, 10.0], [75.7, 10.0], [75.8, 10.0], [75.9, 10.0], [76.0, 10.0], [76.1, 10.0], [76.2, 11.0], [76.3, 11.0], [76.4, 11.0], [76.5, 11.0], [76.6, 11.0], [76.7, 11.0], [76.8, 11.0], [76.9, 11.0], [77.0, 11.0], [77.1, 11.0], [77.2, 11.0], [77.3, 11.0], [77.4, 12.0], [77.5, 12.0], [77.6, 12.0], [77.7, 12.0], [77.8, 12.0], [77.9, 12.0], [78.0, 12.0], [78.1, 12.0], [78.2, 12.0], [78.3, 13.0], [78.4, 13.0], [78.5, 13.0], [78.6, 13.0], [78.7, 13.0], [78.8, 13.0], [78.9, 13.0], [79.0, 13.0], [79.1, 13.0], [79.2, 13.0], [79.3, 13.0], [79.4, 13.0], [79.5, 14.0], [79.6, 14.0], [79.7, 14.0], [79.8, 14.0], [79.9, 14.0], [80.0, 14.0], [80.1, 14.0], [80.2, 14.0], [80.3, 14.0], [80.4, 14.0], [80.5, 14.0], [80.6, 14.0], [80.7, 14.0], [80.8, 14.0], [80.9, 14.0], [81.0, 14.0], [81.1, 14.0], [81.2, 14.0], [81.3, 14.0], [81.4, 14.0], [81.5, 14.0], [81.6, 14.0], [81.7, 14.0], [81.8, 15.0], [81.9, 15.0], [82.0, 15.0], [82.1, 15.0], [82.2, 15.0], [82.3, 15.0], [82.4, 15.0], [82.5, 15.0], [82.6, 15.0], [82.7, 15.0], [82.8, 15.0], [82.9, 15.0], [83.0, 15.0], [83.1, 15.0], [83.2, 15.0], [83.3, 15.0], [83.4, 15.0], [83.5, 15.0], [83.6, 15.0], [83.7, 15.0], [83.8, 15.0], [83.9, 15.0], [84.0, 15.0], [84.1, 15.0], [84.2, 15.0], [84.3, 15.0], [84.4, 15.0], [84.5, 15.0], [84.6, 15.0], [84.7, 15.0], [84.8, 15.0], [84.9, 16.0], [85.0, 16.0], [85.1, 16.0], [85.2, 16.0], [85.3, 16.0], [85.4, 16.0], [85.5, 16.0], [85.6, 16.0], [85.7, 16.0], [85.8, 16.0], [85.9, 16.0], [86.0, 16.0], [86.1, 16.0], [86.2, 16.0], [86.3, 16.0], [86.4, 16.0], [86.5, 16.0], [86.6, 17.0], [86.7, 17.0], [86.8, 17.0], [86.9, 17.0], [87.0, 17.0], [87.1, 17.0], [87.2, 17.0], [87.3, 17.0], [87.4, 17.0], [87.5, 17.0], [87.6, 17.0], [87.7, 17.0], [87.8, 17.0], [87.9, 18.0], [88.0, 18.0], [88.1, 18.0], [88.2, 18.0], [88.3, 18.0], [88.4, 18.0], [88.5, 19.0], [88.6, 19.0], [88.7, 19.0], [88.8, 19.0], [88.9, 19.0], [89.0, 20.0], [89.1, 20.0], [89.2, 20.0], [89.3, 20.0], [89.4, 20.0], [89.5, 21.0], [89.6, 21.0], [89.7, 21.0], [89.8, 21.0], [89.9, 21.0], [90.0, 22.0], [90.1, 22.0], [90.2, 22.0], [90.3, 23.0], [90.4, 23.0], [90.5, 23.0], [90.6, 23.0], [90.7, 23.0], [90.8, 24.0], [90.9, 24.0], [91.0, 24.0], [91.1, 24.0], [91.2, 25.0], [91.3, 25.0], [91.4, 25.0], [91.5, 25.0], [91.6, 25.0], [91.7, 26.0], [91.8, 26.0], [91.9, 26.0], [92.0, 26.0], [92.1, 27.0], [92.2, 27.0], [92.3, 27.0], [92.4, 27.0], [92.5, 28.0], [92.6, 28.0], [92.7, 28.0], [92.8, 28.0], [92.9, 28.0], [93.0, 29.0], [93.1, 29.0], [93.2, 29.0], [93.3, 29.0], [93.4, 30.0], [93.5, 30.0], [93.6, 30.0], [93.7, 30.0], [93.8, 30.0], [93.9, 30.0], [94.0, 31.0], [94.1, 31.0], [94.2, 31.0], [94.3, 31.0], [94.4, 31.0], [94.5, 31.0], [94.6, 32.0], [94.7, 32.0], [94.8, 32.0], [94.9, 32.0], [95.0, 32.0], [95.1, 33.0], [95.2, 33.0], [95.3, 33.0], [95.4, 33.0], [95.5, 34.0], [95.6, 34.0], [95.7, 35.0], [95.8, 35.0], [95.9, 35.0], [96.0, 35.0], [96.1, 35.0], [96.2, 36.0], [96.3, 36.0], [96.4, 36.0], [96.5, 37.0], [96.6, 37.0], [96.7, 37.0], [96.8, 38.0], [96.9, 38.0], [97.0, 38.0], [97.1, 38.0], [97.2, 39.0], [97.3, 39.0], [97.4, 40.0], [97.5, 41.0], [97.6, 41.0], [97.7, 42.0], [97.8, 42.0], [97.9, 43.0], [98.0, 44.0], [98.1, 46.0], [98.2, 49.0], [98.3, 51.0], [98.4, 55.0], [98.5, 65.0], [98.6, 70.0], [98.7, 78.0], [98.8, 82.0], [98.9, 89.0], [99.0, 96.0], [99.1, 110.0], [99.2, 115.0], [99.3, 125.0], [99.4, 133.0], [99.5, 147.0], [99.6, 162.0], [99.7, 175.0], [99.8, 184.0], [99.9, 207.0]], "isOverall": false, "label": "GO", "isController": false}, {"data": [[0.0, 27.0], [0.1, 30.0], [0.2, 36.0], [0.3, 46.0], [0.4, 51.0], [0.5, 56.0], [0.6, 60.0], [0.7, 69.0], [0.8, 76.0], [0.9, 86.0], [1.0, 95.0], [1.1, 100.0], [1.2, 107.0], [1.3, 119.0], [1.4, 132.0], [1.5, 140.0], [1.6, 148.0], [1.7, 153.0], [1.8, 161.0], [1.9, 173.0], [2.0, 182.0], [2.1, 189.0], [2.2, 201.0], [2.3, 209.0], [2.4, 217.0], [2.5, 226.0], [2.6, 231.0], [2.7, 241.0], [2.8, 258.0], [2.9, 264.0], [3.0, 274.0], [3.1, 284.0], [3.2, 290.0], [3.3, 302.0], [3.4, 307.0], [3.5, 313.0], [3.6, 322.0], [3.7, 329.0], [3.8, 336.0], [3.9, 344.0], [4.0, 354.0], [4.1, 362.0], [4.2, 368.0], [4.3, 376.0], [4.4, 383.0], [4.5, 387.0], [4.6, 395.0], [4.7, 399.0], [4.8, 407.0], [4.9, 416.0], [5.0, 426.0], [5.1, 432.0], [5.2, 437.0], [5.3, 445.0], [5.4, 452.0], [5.5, 459.0], [5.6, 469.0], [5.7, 473.0], [5.8, 478.0], [5.9, 489.0], [6.0, 493.0], [6.1, 503.0], [6.2, 510.0], [6.3, 520.0], [6.4, 524.0], [6.5, 531.0], [6.6, 540.0], [6.7, 544.0], [6.8, 554.0], [6.9, 560.0], [7.0, 571.0], [7.1, 577.0], [7.2, 585.0], [7.3, 594.0], [7.4, 601.0], [7.5, 607.0], [7.6, 615.0], [7.7, 624.0], [7.8, 631.0], [7.9, 636.0], [8.0, 645.0], [8.1, 652.0], [8.2, 659.0], [8.3, 671.0], [8.4, 676.0], [8.5, 680.0], [8.6, 686.0], [8.7, 695.0], [8.8, 701.0], [8.9, 707.0], [9.0, 713.0], [9.1, 722.0], [9.2, 727.0], [9.3, 734.0], [9.4, 739.0], [9.5, 744.0], [9.6, 753.0], [9.7, 761.0], [9.8, 766.0], [9.9, 770.0], [10.0, 783.0], [10.1, 787.0], [10.2, 791.0], [10.3, 798.0], [10.4, 807.0], [10.5, 812.0], [10.6, 818.0], [10.7, 826.0], [10.8, 829.0], [10.9, 835.0], [11.0, 842.0], [11.1, 850.0], [11.2, 857.0], [11.3, 862.0], [11.4, 866.0], [11.5, 876.0], [11.6, 883.0], [11.7, 887.0], [11.8, 891.0], [11.9, 902.0], [12.0, 908.0], [12.1, 916.0], [12.2, 922.0], [12.3, 927.0], [12.4, 930.0], [12.5, 935.0], [12.6, 942.0], [12.7, 950.0], [12.8, 954.0], [12.9, 959.0], [13.0, 966.0], [13.1, 970.0], [13.2, 975.0], [13.3, 981.0], [13.4, 986.0], [13.5, 993.0], [13.6, 1001.0], [13.7, 1005.0], [13.8, 1009.0], [13.9, 1014.0], [14.0, 1023.0], [14.1, 1028.0], [14.2, 1034.0], [14.3, 1038.0], [14.4, 1042.0], [14.5, 1044.0], [14.6, 1054.0], [14.7, 1060.0], [14.8, 1067.0], [14.9, 1070.0], [15.0, 1072.0], [15.1, 1077.0], [15.2, 1084.0], [15.3, 1087.0], [15.4, 1091.0], [15.5, 1097.0], [15.6, 1101.0], [15.7, 1104.0], [15.8, 1109.0], [15.9, 1113.0], [16.0, 1117.0], [16.1, 1122.0], [16.2, 1128.0], [16.3, 1136.0], [16.4, 1141.0], [16.5, 1147.0], [16.6, 1152.0], [16.7, 1155.0], [16.8, 1158.0], [16.9, 1164.0], [17.0, 1173.0], [17.1, 1177.0], [17.2, 1180.0], [17.3, 1184.0], [17.4, 1191.0], [17.5, 1196.0], [17.6, 1202.0], [17.7, 1209.0], [17.8, 1215.0], [17.9, 1218.0], [18.0, 1221.0], [18.1, 1224.0], [18.2, 1228.0], [18.3, 1236.0], [18.4, 1241.0], [18.5, 1245.0], [18.6, 1248.0], [18.7, 1251.0], [18.8, 1259.0], [18.9, 1265.0], [19.0, 1268.0], [19.1, 1271.0], [19.2, 1276.0], [19.3, 1280.0], [19.4, 1281.0], [19.5, 1285.0], [19.6, 1290.0], [19.7, 1295.0], [19.8, 1302.0], [19.9, 1308.0], [20.0, 1314.0], [20.1, 1317.0], [20.2, 1321.0], [20.3, 1324.0], [20.4, 1331.0], [20.5, 1332.0], [20.6, 1333.0], [20.7, 1336.0], [20.8, 1344.0], [20.9, 1349.0], [21.0, 1353.0], [21.1, 1359.0], [21.2, 1364.0], [21.3, 1367.0], [21.4, 1370.0], [21.5, 1374.0], [21.6, 1380.0], [21.7, 1389.0], [21.8, 1393.0], [21.9, 1395.0], [22.0, 1400.0], [22.1, 1404.0], [22.2, 1408.0], [22.3, 1411.0], [22.4, 1415.0], [22.5, 1418.0], [22.6, 1419.0], [22.7, 1426.0], [22.8, 1428.0], [22.9, 1431.0], [23.0, 1432.0], [23.1, 1434.0], [23.2, 1436.0], [23.3, 1441.0], [23.4, 1445.0], [23.5, 1450.0], [23.6, 1452.0], [23.7, 1454.0], [23.8, 1456.0], [23.9, 1457.0], [24.0, 1459.0], [24.1, 1462.0], [24.2, 1466.0], [24.3, 1468.0], [24.4, 1470.0], [24.5, 1473.0], [24.6, 1475.0], [24.7, 1476.0], [24.8, 1478.0], [24.9, 1479.0], [25.0, 1480.0], [25.1, 1482.0], [25.2, 1483.0], [25.3, 1485.0], [25.4, 1489.0], [25.5, 1495.0], [25.6, 1497.0], [25.7, 1500.0], [25.8, 1502.0], [25.9, 1503.0], [26.0, 1503.0], [26.1, 1505.0], [26.2, 1507.0], [26.3, 1508.0], [26.4, 1509.0], [26.5, 1510.0], [26.6, 1515.0], [26.7, 1518.0], [26.8, 1519.0], [26.9, 1519.0], [27.0, 1524.0], [27.1, 1525.0], [27.2, 1526.0], [27.3, 1527.0], [27.4, 1528.0], [27.5, 1529.0], [27.6, 1530.0], [27.7, 1533.0], [27.8, 1535.0], [27.9, 1537.0], [28.0, 1539.0], [28.1, 1540.0], [28.2, 1542.0], [28.3, 1544.0], [28.4, 1548.0], [28.5, 1551.0], [28.6, 1553.0], [28.7, 1557.0], [28.8, 1558.0], [28.9, 1561.0], [29.0, 1562.0], [29.1, 1563.0], [29.2, 1565.0], [29.3, 1566.0], [29.4, 1567.0], [29.5, 1569.0], [29.6, 1571.0], [29.7, 1575.0], [29.8, 1577.0], [29.9, 1578.0], [30.0, 1581.0], [30.1, 1582.0], [30.2, 1582.0], [30.3, 1584.0], [30.4, 1585.0], [30.5, 1587.0], [30.6, 1587.0], [30.7, 1588.0], [30.8, 1590.0], [30.9, 1592.0], [31.0, 1593.0], [31.1, 1594.0], [31.2, 1597.0], [31.3, 1598.0], [31.4, 1599.0], [31.5, 1599.0], [31.6, 1602.0], [31.7, 1604.0], [31.8, 1605.0], [31.9, 1607.0], [32.0, 1609.0], [32.1, 1612.0], [32.2, 1613.0], [32.3, 1615.0], [32.4, 1619.0], [32.5, 1620.0], [32.6, 1622.0], [32.7, 1624.0], [32.8, 1625.0], [32.9, 1626.0], [33.0, 1628.0], [33.1, 1631.0], [33.2, 1634.0], [33.3, 1636.0], [33.4, 1638.0], [33.5, 1640.0], [33.6, 1641.0], [33.7, 1647.0], [33.8, 1650.0], [33.9, 1652.0], [34.0, 1654.0], [34.1, 1655.0], [34.2, 1662.0], [34.3, 1664.0], [34.4, 1666.0], [34.5, 1667.0], [34.6, 1669.0], [34.7, 1670.0], [34.8, 1674.0], [34.9, 1677.0], [35.0, 1681.0], [35.1, 1683.0], [35.2, 1686.0], [35.3, 1689.0], [35.4, 1690.0], [35.5, 1692.0], [35.6, 1696.0], [35.7, 1698.0], [35.8, 1702.0], [35.9, 1706.0], [36.0, 1708.0], [36.1, 1710.0], [36.2, 1714.0], [36.3, 1717.0], [36.4, 1721.0], [36.5, 1725.0], [36.6, 1728.0], [36.7, 1731.0], [36.8, 1735.0], [36.9, 1738.0], [37.0, 1740.0], [37.1, 1744.0], [37.2, 1748.0], [37.3, 1752.0], [37.4, 1754.0], [37.5, 1756.0], [37.6, 1761.0], [37.7, 1764.0], [37.8, 1767.0], [37.9, 1770.0], [38.0, 1772.0], [38.1, 1776.0], [38.2, 1777.0], [38.3, 1782.0], [38.4, 1782.0], [38.5, 1784.0], [38.6, 1785.0], [38.7, 1789.0], [38.8, 1791.0], [38.9, 1792.0], [39.0, 1794.0], [39.1, 1795.0], [39.2, 1797.0], [39.3, 1799.0], [39.4, 1800.0], [39.5, 1802.0], [39.6, 1805.0], [39.7, 1807.0], [39.8, 1808.0], [39.9, 1809.0], [40.0, 1811.0], [40.1, 1812.0], [40.2, 1814.0], [40.3, 1815.0], [40.4, 1816.0], [40.5, 1817.0], [40.6, 1818.0], [40.7, 1820.0], [40.8, 1821.0], [40.9, 1824.0], [41.0, 1825.0], [41.1, 1826.0], [41.2, 1828.0], [41.3, 1829.0], [41.4, 1831.0], [41.5, 1833.0], [41.6, 1834.0], [41.7, 1837.0], [41.8, 1839.0], [41.9, 1840.0], [42.0, 1842.0], [42.1, 1843.0], [42.2, 1844.0], [42.3, 1845.0], [42.4, 1846.0], [42.5, 1847.0], [42.6, 1848.0], [42.7, 1849.0], [42.8, 1852.0], [42.9, 1853.0], [43.0, 1854.0], [43.1, 1855.0], [43.2, 1857.0], [43.3, 1858.0], [43.4, 1859.0], [43.5, 1860.0], [43.6, 1862.0], [43.7, 1863.0], [43.8, 1864.0], [43.9, 1864.0], [44.0, 1865.0], [44.1, 1867.0], [44.2, 1867.0], [44.3, 1868.0], [44.4, 1869.0], [44.5, 1870.0], [44.6, 1871.0], [44.7, 1872.0], [44.8, 1874.0], [44.9, 1875.0], [45.0, 1875.0], [45.1, 1876.0], [45.2, 1876.0], [45.3, 1877.0], [45.4, 1878.0], [45.5, 1878.0], [45.6, 1879.0], [45.7, 1880.0], [45.8, 1881.0], [45.9, 1881.0], [46.0, 1882.0], [46.1, 1882.0], [46.2, 1883.0], [46.3, 1885.0], [46.4, 1889.0], [46.5, 1889.0], [46.6, 1891.0], [46.7, 1893.0], [46.8, 1895.0], [46.9, 1896.0], [47.0, 1898.0], [47.1, 1899.0], [47.2, 1902.0], [47.3, 1904.0], [47.4, 1906.0], [47.5, 1907.0], [47.6, 1908.0], [47.7, 1909.0], [47.8, 1910.0], [47.9, 1911.0], [48.0, 1913.0], [48.1, 1914.0], [48.2, 1915.0], [48.3, 1917.0], [48.4, 1918.0], [48.5, 1919.0], [48.6, 1920.0], [48.7, 1922.0], [48.8, 1923.0], [48.9, 1923.0], [49.0, 1925.0], [49.1, 1926.0], [49.2, 1927.0], [49.3, 1930.0], [49.4, 1932.0], [49.5, 1933.0], [49.6, 1935.0], [49.7, 1937.0], [49.8, 1938.0], [49.9, 1940.0], [50.0, 1944.0], [50.1, 1948.0], [50.2, 1953.0], [50.3, 1957.0], [50.4, 1961.0], [50.5, 1965.0], [50.6, 1967.0], [50.7, 1971.0], [50.8, 1975.0], [50.9, 1975.0], [51.0, 1978.0], [51.1, 1980.0], [51.2, 1981.0], [51.3, 1984.0], [51.4, 1986.0], [51.5, 1988.0], [51.6, 1992.0], [51.7, 1995.0], [51.8, 1998.0], [51.9, 2002.0], [52.0, 2006.0], [52.1, 2007.0], [52.2, 2011.0], [52.3, 2014.0], [52.4, 2017.0], [52.5, 2022.0], [52.6, 2023.0], [52.7, 2028.0], [52.8, 2030.0], [52.9, 2033.0], [53.0, 2036.0], [53.1, 2042.0], [53.2, 2046.0], [53.3, 2050.0], [53.4, 2052.0], [53.5, 2054.0], [53.6, 2055.0], [53.7, 2058.0], [53.8, 2059.0], [53.9, 2060.0], [54.0, 2063.0], [54.1, 2065.0], [54.2, 2068.0], [54.3, 2070.0], [54.4, 2071.0], [54.5, 2073.0], [54.6, 2074.0], [54.7, 2076.0], [54.8, 2077.0], [54.9, 2079.0], [55.0, 2082.0], [55.1, 2088.0], [55.2, 2095.0], [55.3, 2101.0], [55.4, 2105.0], [55.5, 2108.0], [55.6, 2114.0], [55.7, 2115.0], [55.8, 2118.0], [55.9, 2119.0], [56.0, 2121.0], [56.1, 2121.0], [56.2, 2123.0], [56.3, 2124.0], [56.4, 2126.0], [56.5, 2130.0], [56.6, 2134.0], [56.7, 2141.0], [56.8, 2146.0], [56.9, 2148.0], [57.0, 2150.0], [57.1, 2153.0], [57.2, 2156.0], [57.3, 2158.0], [57.4, 2159.0], [57.5, 2161.0], [57.6, 2162.0], [57.7, 2163.0], [57.8, 2166.0], [57.9, 2166.0], [58.0, 2169.0], [58.1, 2171.0], [58.2, 2172.0], [58.3, 2174.0], [58.4, 2181.0], [58.5, 2183.0], [58.6, 2189.0], [58.7, 2191.0], [58.8, 2199.0], [58.9, 2202.0], [59.0, 2206.0], [59.1, 2208.0], [59.2, 2209.0], [59.3, 2213.0], [59.4, 2220.0], [59.5, 2223.0], [59.6, 2223.0], [59.7, 2226.0], [59.8, 2229.0], [59.9, 2231.0], [60.0, 2241.0], [60.1, 2246.0], [60.2, 2249.0], [60.3, 2252.0], [60.4, 2253.0], [60.5, 2254.0], [60.6, 2256.0], [60.7, 2259.0], [60.8, 2261.0], [60.9, 2262.0], [61.0, 2264.0], [61.1, 2266.0], [61.2, 2268.0], [61.3, 2272.0], [61.4, 2274.0], [61.5, 2276.0], [61.6, 2278.0], [61.7, 2280.0], [61.8, 2283.0], [61.9, 2286.0], [62.0, 2287.0], [62.1, 2290.0], [62.2, 2292.0], [62.3, 2293.0], [62.4, 2299.0], [62.5, 2320.0], [62.6, 2321.0], [62.7, 2336.0], [62.8, 2343.0], [62.9, 2347.0], [63.0, 2352.0], [63.1, 2357.0], [63.2, 2359.0], [63.3, 2360.0], [63.4, 2361.0], [63.5, 2366.0], [63.6, 2367.0], [63.7, 2370.0], [63.8, 2373.0], [63.9, 2376.0], [64.0, 2380.0], [64.1, 2382.0], [64.2, 2385.0], [64.3, 2388.0], [64.4, 2394.0], [64.5, 2407.0], [64.6, 2420.0], [64.7, 2448.0], [64.8, 2459.0], [64.9, 2478.0], [65.0, 2494.0], [65.1, 2519.0], [65.2, 2527.0], [65.3, 2549.0], [65.4, 2570.0], [65.5, 2601.0], [65.6, 2616.0], [65.7, 2625.0], [65.8, 2636.0], [65.9, 2653.0], [66.0, 2665.0], [66.1, 2708.0], [66.2, 2774.0], [66.3, 2827.0], [66.4, 2893.0], [66.5, 2934.0], [66.6, 3003.0], [66.7, 3061.0], [66.8, 3150.0], [66.9, 3185.0], [67.0, 3248.0], [67.1, 3284.0], [67.2, 3325.0], [67.3, 3331.0], [67.4, 3356.0], [67.5, 3358.0], [67.6, 3378.0], [67.7, 3399.0], [67.8, 3420.0], [67.9, 3438.0], [68.0, 3452.0], [68.1, 3465.0], [68.2, 3478.0], [68.3, 3485.0], [68.4, 3504.0], [68.5, 3537.0], [68.6, 3543.0], [68.7, 3574.0], [68.8, 3586.0], [68.9, 3618.0], [69.0, 3638.0], [69.1, 3653.0], [69.2, 3660.0], [69.3, 3675.0], [69.4, 3699.0], [69.5, 3701.0], [69.6, 3716.0], [69.7, 3729.0], [69.8, 3754.0], [69.9, 3768.0], [70.0, 3793.0], [70.1, 3819.0], [70.2, 3835.0], [70.3, 3849.0], [70.4, 3884.0], [70.5, 3910.0], [70.6, 3924.0], [70.7, 3942.0], [70.8, 3957.0], [70.9, 3969.0], [71.0, 3992.0], [71.1, 4002.0], [71.2, 4016.0], [71.3, 4028.0], [71.4, 4057.0], [71.5, 4066.0], [71.6, 4081.0], [71.7, 4096.0], [71.8, 4134.0], [71.9, 4140.0], [72.0, 4151.0], [72.1, 4164.0], [72.2, 4168.0], [72.3, 4175.0], [72.4, 4182.0], [72.5, 4187.0], [72.6, 4193.0], [72.7, 4195.0], [72.8, 4196.0], [72.9, 4201.0], [73.0, 4204.0], [73.1, 4207.0], [73.2, 4209.0], [73.3, 4211.0], [73.4, 4216.0], [73.5, 4219.0], [73.6, 4220.0], [73.7, 4226.0], [73.8, 4233.0], [73.9, 4237.0], [74.0, 4241.0], [74.1, 4243.0], [74.2, 4247.0], [74.3, 4248.0], [74.4, 4250.0], [74.5, 4257.0], [74.6, 4261.0], [74.7, 4265.0], [74.8, 4269.0], [74.9, 4273.0], [75.0, 4275.0], [75.1, 4281.0], [75.2, 4283.0], [75.3, 4285.0], [75.4, 4289.0], [75.5, 4291.0], [75.6, 4294.0], [75.7, 4296.0], [75.8, 4297.0], [75.9, 4299.0], [76.0, 4301.0], [76.1, 4303.0], [76.2, 4306.0], [76.3, 4308.0], [76.4, 4312.0], [76.5, 4314.0], [76.6, 4318.0], [76.7, 4324.0], [76.8, 4327.0], [76.9, 4329.0], [77.0, 4336.0], [77.1, 4343.0], [77.2, 4346.0], [77.3, 4358.0], [77.4, 4361.0], [77.5, 4366.0], [77.6, 4372.0], [77.7, 4381.0], [77.8, 4386.0], [77.9, 4389.0], [78.0, 4394.0], [78.1, 4415.0], [78.2, 4433.0], [78.3, 4475.0], [78.4, 4528.0], [78.5, 4566.0], [78.6, 4591.0], [78.7, 4612.0], [78.8, 4640.0], [78.9, 4683.0], [79.0, 4695.0], [79.1, 4725.0], [79.2, 4755.0], [79.3, 4786.0], [79.4, 4811.0], [79.5, 4849.0], [79.6, 4871.0], [79.7, 4920.0], [79.8, 4973.0], [79.9, 5033.0], [80.0, 5076.0], [80.1, 5136.0], [80.2, 5196.0], [80.3, 5249.0], [80.4, 5278.0], [80.5, 5317.0], [80.6, 5365.0], [80.7, 5397.0], [80.8, 5450.0], [80.9, 5474.0], [81.0, 5487.0], [81.1, 5502.0], [81.2, 5554.0], [81.3, 5565.0], [81.4, 5594.0], [81.5, 5612.0], [81.6, 5658.0], [81.7, 5672.0], [81.8, 5684.0], [81.9, 5698.0], [82.0, 5710.0], [82.1, 5718.0], [82.2, 5746.0], [82.3, 5754.0], [82.4, 5769.0], [82.5, 5787.0], [82.6, 5799.0], [82.7, 5805.0], [82.8, 5812.0], [82.9, 5820.0], [83.0, 5822.0], [83.1, 5831.0], [83.2, 5841.0], [83.3, 5851.0], [83.4, 5862.0], [83.5, 5871.0], [83.6, 5886.0], [83.7, 5900.0], [83.8, 5912.0], [83.9, 5932.0], [84.0, 5964.0], [84.1, 5992.0], [84.2, 6003.0], [84.3, 6022.0], [84.4, 6040.0], [84.5, 6046.0], [84.6, 6055.0], [84.7, 6063.0], [84.8, 6068.0], [84.9, 6072.0], [85.0, 6087.0], [85.1, 6091.0], [85.2, 6109.0], [85.3, 6123.0], [85.4, 6154.0], [85.5, 6177.0], [85.6, 6189.0], [85.7, 6203.0], [85.8, 6227.0], [85.9, 6248.0], [86.0, 6270.0], [86.1, 6292.0], [86.2, 6305.0], [86.3, 6314.0], [86.4, 6318.0], [86.5, 6325.0], [86.6, 6350.0], [86.7, 6365.0], [86.8, 6388.0], [86.9, 6409.0], [87.0, 6429.0], [87.1, 6446.0], [87.2, 6464.0], [87.3, 6497.0], [87.4, 6513.0], [87.5, 6521.0], [87.6, 6530.0], [87.7, 6548.0], [87.8, 6567.0], [87.9, 6581.0], [88.0, 6590.0], [88.1, 6608.0], [88.2, 6628.0], [88.3, 6651.0], [88.4, 6678.0], [88.5, 6690.0], [88.6, 6699.0], [88.7, 6710.0], [88.8, 6714.0], [88.9, 6727.0], [89.0, 6737.0], [89.1, 6746.0], [89.2, 6760.0], [89.3, 6769.0], [89.4, 6774.0], [89.5, 6777.0], [89.6, 6782.0], [89.7, 6789.0], [89.8, 6797.0], [89.9, 6812.0], [90.0, 6855.0], [90.1, 6862.0], [90.2, 6867.0], [90.3, 6876.0], [90.4, 6889.0], [90.5, 6904.0], [90.6, 6913.0], [90.7, 6928.0], [90.8, 6942.0], [90.9, 6958.0], [91.0, 6980.0], [91.1, 7024.0], [91.2, 7034.0], [91.3, 7038.0], [91.4, 7045.0], [91.5, 7049.0], [91.6, 7053.0], [91.7, 7061.0], [91.8, 7074.0], [91.9, 7085.0], [92.0, 7102.0], [92.1, 7138.0], [92.2, 7150.0], [92.3, 7168.0], [92.4, 7199.0], [92.5, 7224.0], [92.6, 7282.0], [92.7, 7304.0], [92.8, 7783.0], [92.9, 8340.0], [93.0, 9018.0], [93.1, 9505.0], [93.2, 10047.0], [93.3, 10192.0], [93.4, 10275.0], [93.5, 10377.0], [93.6, 10493.0], [93.7, 10566.0], [93.8, 10602.0], [93.9, 10841.0], [94.0, 10968.0], [94.1, 11052.0], [94.2, 11190.0], [94.3, 11247.0], [94.4, 11318.0], [94.5, 11368.0], [94.6, 11442.0], [94.7, 11474.0], [94.8, 11488.0], [94.9, 11503.0], [95.0, 11512.0], [95.1, 11524.0], [95.2, 11537.0], [95.3, 11554.0], [95.4, 11573.0], [95.5, 11577.0], [95.6, 11593.0], [95.7, 11603.0], [95.8, 11612.0], [95.9, 11618.0], [96.0, 11628.0], [96.1, 11638.0], [96.2, 11644.0], [96.3, 11653.0], [96.4, 11657.0], [96.5, 11660.0], [96.6, 11669.0], [96.7, 11680.0], [96.8, 11686.0], [96.9, 11691.0], [97.0, 11702.0], [97.1, 11716.0], [97.2, 11724.0], [97.3, 11736.0], [97.4, 11755.0], [97.5, 11785.0], [97.6, 11808.0], [97.7, 11820.0], [97.8, 11836.0], [97.9, 11843.0], [98.0, 11860.0], [98.1, 11870.0], [98.2, 11881.0], [98.3, 11892.0], [98.4, 11909.0], [98.5, 11913.0], [98.6, 11916.0], [98.7, 11927.0], [98.8, 11934.0], [98.9, 11939.0], [99.0, 11943.0], [99.1, 11959.0], [99.2, 11970.0], [99.3, 11977.0], [99.4, 11989.0], [99.5, 12023.0], [99.6, 12093.0], [99.7, 12114.0], [99.8, 12136.0], [99.9, 12167.0]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5941.0, "series": [{"data": [[0.0, 5003.0], [2100.0, 54.0], [2200.0, 24.0], [2300.0, 5.0], [600.0, 3.0], [700.0, 2.0], [200.0, 466.0], [800.0, 2.0], [900.0, 10.0], [1000.0, 15.0], [1100.0, 13.0], [300.0, 32.0], [1200.0, 18.0], [1300.0, 14.0], [1400.0, 16.0], [1500.0, 8.0], [100.0, 2.0], [400.0, 9.0], [1600.0, 8.0], [1700.0, 23.0], [1800.0, 91.0], [1900.0, 144.0], [500.0, 5.0], [2000.0, 33.0]], "isOverall": false, "label": "JAVA", "isController": false}, {"data": [[0.0, 5941.0], [300.0, 1.0], [100.0, 51.0], [200.0, 7.0]], "isOverall": false, "label": "GO", "isController": false}, {"data": [[0.0, 64.0], [100.0, 67.0], [200.0, 65.0], [300.0, 87.0], [400.0, 83.0], [500.0, 78.0], [600.0, 82.0], [700.0, 93.0], [800.0, 93.0], [900.0, 102.0], [1000.0, 118.0], [1100.0, 120.0], [1200.0, 133.0], [1300.0, 134.0], [1400.0, 221.0], [1500.0, 350.0], [1600.0, 254.0], [1700.0, 219.0], [1800.0, 465.0], [1900.0, 282.0], [2000.0, 207.0], [2100.0, 213.0], [2200.0, 215.0], [2300.0, 124.0], [2400.0, 32.0], [2500.0, 29.0], [2600.0, 35.0], [2700.0, 10.0], [2800.0, 10.0], [2900.0, 10.0], [3000.0, 10.0], [3100.0, 11.0], [3200.0, 14.0], [3300.0, 33.0], [3400.0, 39.0], [3500.0, 29.0], [3600.0, 36.0], [3700.0, 34.0], [3800.0, 27.0], [3900.0, 38.0], [4000.0, 37.0], [4100.0, 70.0], [4200.0, 183.0], [4300.0, 126.0], [4400.0, 20.0], [4500.0, 16.0], [4600.0, 24.0], [4700.0, 20.0], [4800.0, 18.0], [4900.0, 11.0], [5000.0, 13.0], [5100.0, 10.0], [5200.0, 14.0], [5300.0, 15.0], [5400.0, 22.0], [5500.0, 23.0], [5600.0, 27.0], [5700.0, 43.0], [5800.0, 64.0], [5900.0, 29.0], [6000.0, 59.0], [6100.0, 31.0], [6200.0, 28.0], [6300.0, 43.0], [6400.0, 28.0], [6500.0, 43.0], [6600.0, 34.0], [6700.0, 73.0], [6800.0, 38.0], [6900.0, 36.0], [7000.0, 54.0], [7100.0, 27.0], [7200.0, 16.0], [7300.0, 4.0], [7400.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7700.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8200.0, 1.0], [8300.0, 1.0], [8400.0, 1.0], [8500.0, 1.0], [8600.0, 1.0], [8700.0, 1.0], [8800.0, 1.0], [9000.0, 1.0], [9100.0, 1.0], [9200.0, 1.0], [9300.0, 1.0], [9400.0, 2.0], [9500.0, 1.0], [9600.0, 2.0], [9800.0, 1.0], [9900.0, 2.0], [10200.0, 9.0], [10100.0, 2.0], [10000.0, 5.0], [10300.0, 5.0], [10400.0, 4.0], [10500.0, 10.0], [10600.0, 6.0], [10700.0, 1.0], [10800.0, 2.0], [10900.0, 8.0], [11000.0, 5.0], [11200.0, 9.0], [11100.0, 5.0], [11300.0, 8.0], [11400.0, 21.0], [11500.0, 48.0], [11600.0, 79.0], [11700.0, 34.0], [11800.0, 48.0], [11900.0, 65.0], [12000.0, 14.0], [12100.0, 17.0], [12200.0, 3.0]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1278.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 11878.0, "series": [{"data": [[0.0, 11878.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1278.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 4844.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 12.431818181818182, "minX": 1.71393978E12, "maxY": 91.4182692307694, "series": [{"data": [[1.71393978E12, 71.0093333333332]], "isOverall": false, "label": "CATEGORIA_POST", "isController": false}, {"data": [[1.71393984E12, 85.67266666666669]], "isOverall": false, "label": "MARCA_UPDATE", "isController": false}, {"data": [[1.71393984E12, 85.63866666666665]], "isOverall": false, "label": "MARCA_GET", "isController": false}, {"data": [[1.71394002E12, 72.27924528301885], [1.71393996E12, 69.418439716312]], "isOverall": false, "label": "CATEGORIA_DELETE", "isController": false}, {"data": [[1.71393984E12, 54.16891891891884], [1.71393978E12, 84.39036544850504]], "isOverall": false, "label": "MARCA_POST", "isController": false}, {"data": [[1.7139399E12, 91.4182692307694], [1.71393996E12, 12.431818181818182]], "isOverall": false, "label": "PRODUCTOS_GET", "isController": false}, {"data": [[1.71393996E12, 71.54733333333324]], "isOverall": false, "label": "PRODUCTO_DELETE", "isController": false}, {"data": [[1.71393996E12, 72.76466666666676]], "isOverall": false, "label": "MARCA_DELETE", "isController": false}, {"data": [[1.71393978E12, 82.62000000000005]], "isOverall": false, "label": "CATEGORIA_GET", "isController": false}, {"data": [[1.71393978E12, 73.9026666666667]], "isOverall": false, "label": "CATEGORIA_UPDATE", "isController": false}, {"data": [[1.7139399E12, 42.876288659793794], [1.71393984E12, 81.65160796324659]], "isOverall": false, "label": "PRODUCTO_POST", "isController": false}, {"data": [[1.71393996E12, 78.09066666666665]], "isOverall": false, "label": "PRODUCTO_UPDATE", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71394002E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.9, "minX": 1.0, "maxY": 5346.8144126357365, "series": [{"data": [[2.0, 80.80000000000003], [3.0, 77.5625], [4.0, 65.36842105263158], [5.0, 61.31818181818182], [6.0, 67.4736842105263], [7.0, 72.16666666666666], [8.0, 68.24999999999997], [9.0, 63.04761904761905], [10.0, 67.0952380952381], [11.0, 66.7], [12.0, 78.35294117647061], [13.0, 72.42105263157896], [14.0, 69.22727272727272], [15.0, 75.10526315789474], [16.0, 74.47368421052632], [17.0, 71.47368421052632], [18.0, 88.16666666666666], [19.0, 75.00000000000001], [20.0, 78.61111111111111], [21.0, 83.35], [22.0, 72.75000000000001], [23.0, 86.1764705882353], [24.0, 69.19047619047619], [25.0, 93.38888888888887], [26.0, 82.55555555555556], [27.0, 16.900000000000002], [28.0, 125.71428571428574], [29.0, 118.66666666666666], [30.0, 85.38888888888889], [31.0, 74.76190476190477], [32.0, 83.77272727272725], [33.0, 80.21052631578947], [34.0, 82.43478260869567], [35.0, 84.88888888888889], [36.0, 71.77272727272728], [37.0, 94.19047619047619], [38.0, 91.88235294117645], [39.0, 79.50000000000001], [40.0, 95.8095238095238], [41.0, 73.13636363636365], [42.0, 89.77777777777777], [43.0, 82.34999999999998], [44.0, 123.85714285714286], [45.0, 80.76190476190476], [46.0, 83.20000000000002], [47.0, 113.1578947368421], [48.0, 76.59090909090911], [49.0, 16.666666666666668], [51.0, 77.54545454545453], [50.0, 149.35714285714286], [52.0, 57.93750000000001], [53.0, 79.03225806451611], [55.0, 67.4074074074074], [54.0, 61.580645161290334], [56.0, 52.02702702702702], [57.0, 87.96296296296298], [58.0, 75.9375], [59.0, 54.79411764705881], [60.0, 56.79411764705882], [61.0, 57.151515151515156], [62.0, 53.722222222222236], [63.0, 61.425], [64.0, 77.48484848484848], [66.0, 59.11764705882353], [67.0, 73.75675675675676], [65.0, 42.744680851063826], [68.0, 58.70588235294118], [69.0, 47.20454545454547], [71.0, 61.696969696969695], [70.0, 60.058823529411754], [72.0, 52.36585365853658], [73.0, 61.89583333333334], [74.0, 67.03225806451611], [75.0, 55.290909090909096], [76.0, 46.08000000000001], [77.0, 44.90196078431373], [78.0, 105.9508196721311], [79.0, 248.7462686567163], [80.0, 63.231884057971016], [81.0, 201.32876712328766], [82.0, 291.21212121212125], [83.0, 108.4189189189189], [84.0, 205.1558441558442], [85.0, 125.28205128205124], [87.0, 126.52127659574465], [86.0, 187.38775510204079], [88.0, 154.05063291139243], [89.0, 67.49242424242425], [90.0, 149.7984496124031], [91.0, 73.29054054054053], [92.0, 100.41610738255031], [93.0, 61.35164835164838], [94.0, 73.73053892215566], [95.0, 183.4603658536586], [96.0, 187.5175718849841], [97.0, 172.47872340425522], [99.0, 351.35714285714295], [98.0, 135.7166666666666], [100.0, 440.450049455984], [1.0, 108.75000000000001]], "isOverall": false, "label": "JAVA", "isController": false}, {"data": [[77.9043333333332, 173.0363333333331]], "isOverall": false, "label": "JAVA-Aggregated", "isController": false}, {"data": [[2.0, 7.230769230769231], [3.0, 7.529411764705882], [4.0, 5.999999999999999], [5.0, 8.28], [6.0, 6.842105263157894], [7.0, 8.888888888888886], [8.0, 5.9], [9.0, 7.999999999999998], [10.0, 8.434782608695652], [11.0, 6.222222222222221], [12.0, 8.266666666666667], [13.0, 8.444444444444443], [14.0, 9.074074074074074], [15.0, 6.5], [16.0, 10.05], [17.0, 8.625000000000002], [18.0, 9.954545454545457], [19.0, 8.052631578947368], [20.0, 8.666666666666668], [21.0, 7.687499999999999], [22.0, 9.619047619047619], [23.0, 10.7], [24.0, 8.600000000000001], [25.0, 7.764705882352941], [26.0, 12.777777777777777], [27.0, 10.523809523809526], [28.0, 10.47058823529412], [29.0, 9.250000000000002], [30.0, 15.999999999999996], [31.0, 13.826086956521738], [32.0, 15.166666666666666], [33.0, 8.714285714285715], [34.0, 7.333333333333334], [35.0, 6.615384615384616], [36.0, 18.961538461538456], [37.0, 8.526315789473685], [38.0, 21.399999999999995], [39.0, 30.904761904761912], [40.0, 7.368421052631578], [41.0, 13.809523809523808], [42.0, 13.8], [43.0, 10.210526315789474], [44.0, 13.833333333333334], [45.0, 12.157894736842106], [46.0, 32.48], [47.0, 20.142857142857146], [48.0, 10.318181818181818], [49.0, 9.599999999999998], [50.0, 11.791666666666664], [51.0, 9.608695652173914], [52.0, 16.828571428571426], [53.0, 18.785714285714285], [54.0, 8.606060606060604], [55.0, 15.566666666666666], [56.0, 10.0], [57.0, 13.466666666666665], [58.0, 7.290322580645161], [59.0, 10.764705882352944], [60.0, 7.735294117647059], [61.0, 12.181818181818183], [62.0, 13.945945945945942], [63.0, 7.166666666666666], [64.0, 11.12820512820513], [66.0, 9.206896551724139], [67.0, 8.615384615384613], [65.0, 6.043478260869564], [68.0, 6.444444444444444], [70.0, 6.342857142857144], [71.0, 9.272727272727273], [69.0, 11.534883720930234], [72.0, 6.829268292682928], [73.0, 6.590909090909093], [74.0, 20.124999999999996], [75.0, 7.071428571428574], [76.0, 12.72], [77.0, 7.840000000000001], [78.0, 17.294117647058822], [79.0, 6.587301587301585], [80.0, 8.573529411764707], [81.0, 6.347222222222222], [82.0, 8.714285714285715], [83.0, 8.32394366197183], [84.0, 8.243589743589746], [85.0, 6.4799999999999995], [87.0, 7.294736842105262], [86.0, 6.127659574468082], [89.0, 7.31782945736434], [90.0, 8.954887218045108], [91.0, 9.825503355704699], [88.0, 8.973684210526317], [92.0, 9.203947368421055], [93.0, 9.62222222222222], [95.0, 8.623100303951372], [94.0, 8.036363636363632], [96.0, 6.04193548387097], [97.0, 8.877192982456139], [98.0, 9.33471074380166], [99.0, 9.94642857142857], [100.0, 17.21135029354206], [1.0, 9.5]], "isOverall": false, "label": "GO", "isController": false}, {"data": [[78.03316666666663, 10.712833333333347]], "isOverall": false, "label": "GO-Aggregated", "isController": false}, {"data": [[2.0, 1350.5333333333335], [3.0, 1707.9444444444443], [4.0, 1352.8695652173913], [5.0, 1824.0625], [6.0, 1632.8333333333335], [7.0, 1747.6842105263158], [8.0, 1685.578947368421], [9.0, 1581.1499999999999], [10.0, 1986.0952380952385], [11.0, 1131.85], [12.0, 1795.722222222222], [13.0, 1788.5882352941173], [14.0, 1613.6818181818182], [15.0, 1870.764705882353], [16.0, 1881.4444444444443], [17.0, 1585.3636363636363], [18.0, 2272.8571428571427], [19.0, 1729.5714285714287], [20.0, 1876.388888888889], [21.0, 2132.428571428571], [22.0, 1534.3999999999999], [23.0, 1947.1666666666665], [24.0, 1847.8000000000004], [25.0, 2092.4705882352937], [26.0, 1884.894736842105], [27.0, 1791.136363636364], [28.0, 1877.157894736842], [29.0, 1814.9047619047617], [30.0, 3076.5333333333333], [31.0, 1733.7727272727275], [32.0, 1508.0000000000002], [33.0, 2057.777777777778], [34.0, 2138.9444444444443], [35.0, 1786.3181818181818], [36.0, 2094.555555555555], [37.0, 1759.7083333333333], [38.0, 2351.2500000000005], [39.0, 2004.3157894736842], [40.0, 2296.833333333333], [41.0, 2399.875], [42.0, 1506.8095238095239], [43.0, 2282.0], [44.0, 2157.3999999999996], [45.0, 2425.409090909091], [46.0, 1774.3529411764703], [47.0, 2236.055555555556], [48.0, 2121.8636363636365], [49.0, 1964.521739130435], [50.0, 2929.4545454545455], [51.0, 2190.6000000000004], [52.0, 2407.151515151514], [53.0, 2033.8620689655168], [54.0, 2826.4333333333334], [55.0, 2264.290322580645], [56.0, 2450.5833333333326], [57.0, 2427.5862068965516], [58.0, 2606.121212121212], [59.0, 2663.0303030303025], [60.0, 2711.5714285714284], [61.0, 2302.6923076923076], [62.0, 2276.894736842105], [63.0, 2573.295454545455], [64.0, 2562.5454545454545], [65.0, 2156.803921568627], [66.0, 2521.3939393939395], [67.0, 2585.7999999999997], [68.0, 2497.166666666666], [70.0, 2542.6190476190473], [71.0, 2365.777777777778], [69.0, 2848.6000000000004], [72.0, 2518.048780487805], [74.0, 2438.4285714285716], [75.0, 2816.909090909092], [73.0, 2655.5333333333324], [76.0, 3114.785714285714], [77.0, 3163.5957446808507], [78.0, 2912.4375000000005], [79.0, 3137.0645161290327], [81.0, 3126.3134328358215], [82.0, 2670.3076923076924], [83.0, 3352.3846153846152], [80.0, 3970.3846153846157], [84.0, 3288.226666666667], [85.0, 3240.9599999999987], [87.0, 2907.8333333333344], [86.0, 2871.797872340426], [88.0, 3769.837837837837], [89.0, 2976.3720930232557], [90.0, 3410.0215827338134], [91.0, 3617.69677419355], [92.0, 3504.465408805031], [93.0, 3762.941176470589], [94.0, 2882.5029940119766], [95.0, 3030.725552050474], [96.0, 2407.330065359475], [97.0, 2604.4354243542416], [99.0, 2467.5772357723577], [98.0, 3511.996124031008], [100.0, 5346.8144126357365], [1.0, 2237.625]], "isOverall": false, "label": "PYTHON", "isController": false}, {"data": [[78.1488333333334, 3198.5758333333383]], "isOverall": false, "label": "PYTHON-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2676.5, "minX": 1.71393978E12, "maxY": 3316055.966666667, "series": [{"data": [[1.7139399E12, 3316055.966666667], [1.71393984E12, 1288824.7833333334], [1.71394002E12, 708810.85], [1.71393996E12, 1167779.7833333334], [1.71393978E12, 1429232.6166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7139399E12, 5235.066666666667], [1.71393984E12, 17978.866666666665], [1.71394002E12, 2676.5], [1.71393996E12, 20235.633333333335], [1.71393978E12, 20844.466666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71394002E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.216471897607135, "minX": 1.71393978E12, "maxY": 9093.583038869261, "series": [{"data": [[1.7139399E12, 212.32801418439695], [1.71393984E12, 577.9050715214566], [1.71394002E12, 12.233108108108116], [1.71393996E12, 8.272727272727277], [1.71393978E12, 6.260799999999992]], "isOverall": false, "label": "JAVA", "isController": false}, {"data": [[1.7139399E12, 47.561538461538476], [1.71393984E12, 8.072083879423332], [1.71394002E12, 14.561576354679799], [1.71393996E12, 6.216471897607135], [1.71393978E12, 6.704196519959049]], "isOverall": false, "label": "GO", "isController": false}, {"data": [[1.7139399E12, 9093.583038869261], [1.71393984E12, 2708.679453836151], [1.71394002E12, 6081.902027027023], [1.71393996E12, 2456.9663768115897], [1.71393978E12, 2048.014933333338]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71394002E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.023999999999998, "minX": 1.71393978E12, "maxY": 9093.300353356884, "series": [{"data": [[1.7139399E12, 207.57624113475183], [1.71393984E12, 577.5884265279576], [1.71394002E12, 12.202702702702704], [1.71393996E12, 8.158656629994203], [1.71393978E12, 6.023999999999998]], "isOverall": false, "label": "JAVA", "isController": false}, {"data": [[1.7139399E12, 41.207692307692334], [1.71393984E12, 7.873525557011803], [1.71394002E12, 14.556650246305418], [1.71393996E12, 6.2120200333889874], [1.71393978E12, 6.570112589559886]], "isOverall": false, "label": "GO", "isController": false}, {"data": [[1.7139399E12, 9093.300353356884], [1.71393984E12, 2708.5832249674936], [1.71394002E12, 6081.601351351351], [1.71393996E12, 2456.8243478260842], [1.71393978E12, 2047.9338666666686]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71394002E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71393978E12, "maxY": 1.0194346289752656, "series": [{"data": [[1.7139399E12, 0.24645390070921944], [1.71393984E12, 0.48699609882964745], [1.71394002E12, 0.0], [1.71393996E12, 0.23393167342211948], [1.71393978E12, 0.14719999999999991]], "isOverall": false, "label": "JAVA", "isController": false}, {"data": [[1.7139399E12, 0.280769230769231], [1.71393984E12, 0.25163826998689465], [1.71394002E12, 0.0], [1.71393996E12, 0.28436282693377807], [1.71393978E12, 0.2093142272262024]], "isOverall": false, "label": "GO", "isController": false}, {"data": [[1.7139399E12, 1.0194346289752656], [1.71393984E12, 0.8654096228868654], [1.71394002E12, 0.7162162162162162], [1.71393996E12, 0.8666666666666653], [1.71393978E12, 0.6741333333333333]], "isOverall": false, "label": "PYTHON", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71394002E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.71393978E12, "maxY": 12251.0, "series": [{"data": [[1.7139399E12, 12251.0], [1.71393984E12, 6593.0], [1.71394002E12, 7000.0], [1.71393996E12, 10407.0], [1.71393978E12, 4433.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7139399E12, 11731.7], [1.71393984E12, 2637.3999999999996], [1.71394002E12, 6761.8], [1.71393996E12, 2241.0], [1.71393978E12, 2091.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7139399E12, 12125.9], [1.71393984E12, 6239.0], [1.71394002E12, 6951.12], [1.71393996E12, 7148.5], [1.71393978E12, 4342.95]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7139399E12, 11916.9], [1.71393984E12, 4852.849999999999], [1.71394002E12, 6872.0], [1.71393996E12, 5556.5], [1.71393978E12, 4109.75]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7139399E12, 4.0], [1.71393984E12, 3.0], [1.71394002E12, 3.0], [1.71393996E12, 2.0], [1.71393978E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7139399E12, 238.0], [1.71393984E12, 17.0], [1.71394002E12, 17.0], [1.71393996E12, 6.0], [1.71393978E12, 7.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71394002E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 12.0, "maxY": 5179.5, "series": [{"data": [[12.0, 1714.5], [17.0, 291.0], [18.0, 5179.5], [19.0, 275.0], [20.0, 241.5], [21.0, 259.0], [22.0, 271.0], [23.0, 249.5], [24.0, 252.5], [25.0, 241.0], [26.0, 239.0], [27.0, 230.0], [30.0, 17.0], [31.0, 17.0], [33.0, 13.5], [35.0, 18.0], [34.0, 28.0], [37.0, 17.0], [36.0, 18.0], [38.0, 18.0], [39.0, 17.0], [40.0, 17.0], [41.0, 17.0], [43.0, 13.0], [42.0, 16.0], [44.0, 15.0], [45.0, 18.0], [46.0, 24.0], [49.0, 17.0], [48.0, 1971.5], [51.0, 19.0], [52.0, 1804.5], [54.0, 14.5], [55.0, 26.0], [56.0, 1407.0], [57.0, 9.0], [59.0, 66.0], [61.0, 8.0], [60.0, 9.0], [63.0, 9.0], [62.0, 154.5], [66.0, 8.0], [67.0, 9.0], [64.0, 8.5], [65.0, 20.0], [70.0, 17.0], [69.0, 22.0], [72.0, 1458.5], [74.0, 2139.0], [73.0, 7.0], [79.0, 1441.0], [78.0, 1060.5], [83.0, 13.0], [81.0, 1876.0], [86.0, 18.0], [85.0, 2026.0], [89.0, 10.0], [90.0, 1905.5], [95.0, 8.0], [93.0, 1865.0], [105.0, 9.0], [106.0, 6.5], [111.0, 7.0], [109.0, 7.0], [110.0, 5.0], [115.0, 7.0], [112.0, 7.0], [117.0, 5.0], [118.0, 4.5], [123.0, 16.0], [122.0, 6.5], [126.0, 5.0], [129.0, 5.0], [134.0, 5.0], [133.0, 5.0], [128.0, 5.0], [130.0, 4.0], [132.0, 4.0], [141.0, 5.0], [139.0, 5.0], [142.0, 8.0], [138.0, 4.0], [144.0, 9.0], [147.0, 8.0], [145.0, 5.0], [151.0, 5.0], [149.0, 6.0], [158.0, 5.0], [157.0, 7.0], [154.0, 5.0], [166.0, 7.0], [160.0, 6.0], [164.0, 4.0], [162.0, 7.0], [172.0, 6.0], [168.0, 7.0], [175.0, 5.0], [174.0, 4.0], [179.0, 7.0], [178.0, 6.0], [177.0, 4.0], [176.0, 4.0], [190.0, 6.0], [199.0, 4.0], [198.0, 6.0], [192.0, 6.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 199.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 12.0, "maxY": 5177.5, "series": [{"data": [[12.0, 1714.5], [17.0, 285.0], [18.0, 5177.5], [19.0, 266.0], [20.0, 233.0], [21.0, 251.0], [22.0, 262.5], [23.0, 244.0], [24.0, 245.5], [25.0, 236.0], [26.0, 234.0], [27.0, 227.0], [30.0, 17.0], [31.0, 17.0], [33.0, 13.5], [35.0, 18.0], [34.0, 28.0], [37.0, 17.0], [36.0, 18.0], [38.0, 18.0], [39.0, 17.0], [40.0, 17.0], [41.0, 17.0], [43.0, 12.0], [42.0, 16.0], [44.0, 15.0], [45.0, 18.0], [46.0, 24.0], [49.0, 17.0], [48.0, 1971.5], [51.0, 18.0], [52.0, 1804.0], [54.0, 14.0], [55.0, 25.0], [56.0, 1407.0], [57.0, 8.0], [59.0, 57.0], [61.0, 7.0], [60.0, 7.0], [63.0, 8.0], [62.0, 130.0], [66.0, 7.0], [67.0, 8.0], [64.0, 8.0], [65.0, 20.0], [70.0, 17.0], [69.0, 22.0], [72.0, 1458.5], [74.0, 2139.0], [73.0, 7.0], [79.0, 1441.0], [78.0, 1060.5], [83.0, 12.0], [81.0, 1876.0], [86.0, 15.0], [85.0, 2026.0], [89.0, 9.0], [90.0, 1905.5], [95.0, 8.0], [93.0, 1864.0], [105.0, 9.0], [106.0, 6.5], [111.0, 7.0], [109.0, 7.0], [110.0, 5.0], [115.0, 7.0], [112.0, 7.0], [117.0, 5.0], [118.0, 4.5], [123.0, 16.0], [122.0, 6.5], [126.0, 5.0], [129.0, 5.0], [134.0, 5.0], [133.0, 5.0], [128.0, 5.0], [130.0, 4.0], [132.0, 4.0], [141.0, 5.0], [139.0, 5.0], [142.0, 8.0], [138.0, 4.0], [144.0, 9.0], [147.0, 8.0], [145.0, 5.0], [151.0, 5.0], [149.0, 6.0], [158.0, 5.0], [157.0, 7.0], [154.0, 5.0], [166.0, 7.0], [160.0, 6.0], [164.0, 4.0], [162.0, 7.0], [172.0, 6.0], [168.0, 7.0], [175.0, 5.0], [174.0, 4.0], [179.0, 7.0], [178.0, 6.0], [177.0, 4.0], [176.0, 4.0], [190.0, 6.0], [199.0, 4.0], [198.0, 6.0], [192.0, 6.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 199.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.7, "minX": 1.71393978E12, "maxY": 96.38333333333334, "series": [{"data": [[1.7139399E12, 26.766666666666666], [1.71393984E12, 76.5], [1.71394002E12, 11.7], [1.71393996E12, 88.65], [1.71393978E12, 96.38333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71394002E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.9, "minX": 1.71393978E12, "maxY": 65.9, "series": [{"data": [[1.7139399E12, 24.6], [1.71393984E12, 58.766666666666666], [1.71394002E12, 3.3833333333333333], [1.71393996E12, 47.35], [1.71393978E12, 65.9]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7139399E12, 2.9], [1.71393984E12, 17.933333333333334], [1.71393978E12, 29.166666666666668]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.71394002E12, 4.933333333333334], [1.71393996E12, 7.266666666666667]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.71394002E12, 4.933333333333334], [1.71393996E12, 32.86666666666667]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71394002E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3833333333333333, "minX": 1.71393978E12, "maxY": 32.56666666666667, "series": [{"data": [[1.7139399E12, 9.433333333333334], [1.71393984E12, 25.633333333333333], [1.71394002E12, 4.933333333333334], [1.71393996E12, 28.75], [1.71393978E12, 31.25]], "isOverall": false, "label": "PYTHON-success", "isController": false}, {"data": [[1.7139399E12, 8.666666666666666], [1.71393984E12, 25.433333333333334], [1.71394002E12, 3.3833333333333333], [1.71393996E12, 29.95], [1.71393978E12, 32.56666666666667]], "isOverall": false, "label": "GO-success", "isController": false}, {"data": [[1.7139399E12, 9.4], [1.71393984E12, 25.633333333333333], [1.71394002E12, 4.933333333333334], [1.71393996E12, 28.783333333333335], [1.71393978E12, 31.25]], "isOverall": false, "label": "JAVA-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71394002E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.25, "minX": 1.71393978E12, "maxY": 95.06666666666666, "series": [{"data": [[1.7139399E12, 27.5], [1.71393984E12, 76.7], [1.71394002E12, 13.25], [1.71393996E12, 87.48333333333333], [1.71393978E12, 95.06666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71394002E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

